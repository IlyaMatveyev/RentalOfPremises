// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentalOfPremises.Infrastructure.MSSQLServer;

#nullable disable

namespace RentalOfPremises.Infrastructure.Migrations
{
    [DbContext(typeof(RentalOfPremisesDbContext))]
    [Migration("20241121111819_add_IsEmailConfirmed_Field_In_UserTable")]
    partial class add_IsEmailConfirmed_Field_In_UserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RentalOfPremises.Domain.Models.Advert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PremiseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PremiseId")
                        .IsUnique();

                    b.ToTable("Adverts");
                });

            modelBuilder.Entity("RentalOfPremises.Domain.Models.Premise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<int>("CoutOfRooms")
                        .HasColumnType("int");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RenterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("RenterId");

                    b.ToTable("Premises");
                });

            modelBuilder.Entity("RentalOfPremises.Domain.Models.Response", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdvertId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<Guid?>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.HasIndex("SenderId");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("RentalOfPremises.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RentalOfPremises.Domain.Models.Advert", b =>
                {
                    b.HasOne("RentalOfPremises.Domain.Models.User", "Owner")
                        .WithMany("Adverts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalOfPremises.Domain.Models.Premise", "Premise")
                        .WithOne("Advert")
                        .HasForeignKey("RentalOfPremises.Domain.Models.Advert", "PremiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Premise");
                });

            modelBuilder.Entity("RentalOfPremises.Domain.Models.Premise", b =>
                {
                    b.HasOne("RentalOfPremises.Domain.Models.User", "Owner")
                        .WithMany("PersonalPremises")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RentalOfPremises.Domain.Models.User", "Renter")
                        .WithMany("RentedPremises")
                        .HasForeignKey("RenterId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Owner");

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("RentalOfPremises.Domain.Models.Response", b =>
                {
                    b.HasOne("RentalOfPremises.Domain.Models.Advert", "Advert")
                        .WithMany("Responses")
                        .HasForeignKey("AdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalOfPremises.Domain.Models.User", "Sender")
                        .WithMany("Responses")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Advert");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("RentalOfPremises.Domain.Models.Advert", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("RentalOfPremises.Domain.Models.Premise", b =>
                {
                    b.Navigation("Advert");
                });

            modelBuilder.Entity("RentalOfPremises.Domain.Models.User", b =>
                {
                    b.Navigation("Adverts");

                    b.Navigation("PersonalPremises");

                    b.Navigation("RentedPremises");

                    b.Navigation("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
